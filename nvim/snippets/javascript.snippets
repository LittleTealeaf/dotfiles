snippet v "var statement" 
var ${0}
endsnippet

snippet v= "var assignment" 
var ${1} = ${2}
endsnippet

snippet l "let statement" 
let ${0}
endsnippet

snippet l= "let assignment"
let ${1} = ${2}
endsnippet

snippet dl "deconstruct into let" 
let {${1}} = ${2}
endsnippet

snippet c "const statement" 
const ${0}
endsnippet

snippet c= "const assignment" 
const ${1} = ${2}
endsnippet

snippet dc "deconstruct into const" 
const {${1}} = ${2}
endsnippet

snippet ter "Ternary Operator" 
${1:true} ? ${2:null} : ${3:null}
endsnippet

snippet tc "Try Catch" 
try {
	${0}
} catch (${1:error}) {

}
endsnippet

snippet fun "Anonymous Function"
function (${1}) {
	${0}
}
endsnippet

snippet fn "Named Snippet" 
function ${1:myFunction}(${2}) {
	${0}
}
endsnippet

snippet sef "Self Executing Function" 
(() => {
	${0}
})();
endsnippet

snippet af "Arrow Function" 
(${1}) => ${2}
endsnippet

snippet afb "Arrow Function with Body" 
(${1}) => {
	${0}
}
endsnippet
